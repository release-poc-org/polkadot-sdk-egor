name: RC Build

on:
  # workflow_dispatch:
    # inputs:
    #   binary:
    #     description: Binary to be build for the release
    #     required: true
    #     default: polkadot
    #     type: choice
    #     options:
    #       - polkadot
    #       - polkadot-parachain
    #       - all

    #   release_tag:
    #     description: Tag matching the actual release candidate with the format vX.XX.X-rcX or stableYYMM
    #     required: true
    #     type: string

  workflow_call:
    inputs:
      binaries:
        description: Binary to be build for the release
        required: true
        default: polkadot
        type: string

      release_tag:
        description: Tag matching the actual release candidate with the format vX.XX.X-rcX or stableYYMM
        required: true
        type: string

env:
  PGP_KMS_KEY: ${{ secrets.PGP_KMS_KEY }}
  PGP_KMS_HASH: ${{ secrets.PGP_KMS_HASH }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:

  set-image:
    # GitHub Actions allows using 'env' in a container context.
    # However, env variables don't work for forks: https://github.com/orgs/community/discussions/44322
    # This workaround sets the container image for each job using 'set-image' job output.
    runs-on: ubuntu-latest
    outputs:
      IMAGE: ${{ steps.set_image.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7

      - id: set_image
        run: cat .github/env >> $GITHUB_OUTPUT

  build-rc:
    needs: [set-image]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.set-image.outputs.IMAGE }}
    strategy:
      matrix:
        binaries: ${{ inputs.binaries }}

    steps:
      - name: Install pgpkkms
        run: |
          # Install pgpkms that is used to sign build artifacts
          python3 -m pip install "pgpkms @ git+https://github.com/paritytech-release/pgpkms.git@5a8f82fbb607ea102d8c178e761659de54c7af69"
          which pgpkms

      - name: Checkout sources
        uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
        with:
          ref: ${{ inputs.release_tag }}
          fetch-depth: 0

      - name: Import gpg keys
        shell: bash
        run: |
          . ./.github/scripts/common/lib.sh

          import_gpg_keys

      - name: Build binary
        run: |
          ARTIFACTS=/artifacts/${{ matrix.binaries[0] }}
          echo "Artifacts will be copied into $ARTIFACTS"
          mkdir -p "$ARTIFACTS"
          cd $ARTIFACTS
          echo "Test" >> ${{ matrix.binaries[0] }}.txt
          sha256sum "${{ matrix.binaries[0] }}".txt | tee "${{ matrix.binaries[0] }}.sha256"

          # ./.github/scripts/release/build-linux-release.sh ${{ matrix.binaries[0] }} ${{ matrix.binaries[1] }}

      - name: Sign artifacts
        working-directory: /artifacts/${{ matrix.binaries[0] }}
        run: |
          # python3 -m pgpkms sign --input ${{matrix.binaries[0] }} -o ${{ matrix.binaries[0] }}.asc

          python3 -m pgpkms sign --input ${{ matrix.binaries[0] }}.txt -o ${{ matrix.binaries[0] }}.asc
          ls -la

      - name: Check sha256 ${{ matrix.binaries[0] }}
        working-directory: /artifacts/${{ matrix.binaries[0] }}
        shell: bash
        run: |
          .  "${GITHUB_WORKSPACE}"/.github/scripts/common/lib.sh

          echo "Checking binary  ${{ matrix.binaries[0] }}"
          check_sha256  ${{ matrix.binaries[0] }} && echo "OK" || echo "ERR"

      # - name: Check GPG ${{ matrix.binaries[0] }}
      #   working-directory: /artifacts/${{ matrix.binaries[0] }}
      #   shell: bash
      #   run: |
      #     . "${GITHUB_WORKSPACE}"/.github/scripts/common/lib.sh

      #     check_gpg  ${{ matrix.binaries[0] }}

      # - name: Build polkadot deb package
      #   if: ${{ matrix.binaries[0] == 'polkadot' }}
      #   shell: bash
      #   run: |
      #     . "${GITHUB_WORKSPACE}"/.github/scripts/release/build-deb.sh ${{ matrix.binaries[0] }}


      - name: Upload ${{ matrix.binaries[0] }} artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ matrix.binaries[0] }}
          path: /artifacts/${{ matrix.binaries[0] }}

  upload-artifacts-to-s3:
    needs: [build-rc]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    strategy:
      matrix:
        binaries: ${{ inputs.binaries }}

    steps:
      - name: Checkout
        uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: artifacts/${{ matrix.binaries[0] }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload ${{ matrix.binaries[0] }} artifacts to s3
        run: |
          . ./.github/scripts/release/release_lib.sh
          upload_s3_release ${{ matrix.binaries[0] }} ${{ inputs.release_tag }}

# - name: Upload artifacts to github release
